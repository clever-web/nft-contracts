{
  "contractName": "ERC165Upgradeable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x60aac6a853246704b017e55f9d3b456debfd0a7f49dd9a99e7113bed03ef0696\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67add465d6dec3198061b5fb7ed4d8b0e1a26f0c0200115d338241ca74a693de\",\"dweb:/ipfs/Qmerko5uM4L1jwJKK7yPiqTq1QTgd6cbNEy6ffmTLBj6MW\"]},\"/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726\",\"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse\"]},\"/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal initializer {\n        __ERC165_init_unchained();\n    }\n\n    function __ERC165_init_unchained() internal initializer {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n    uint256[50] private __gap;\n}\n",
  "sourcePath": "/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
  "ast": {
    "absolutePath": "/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1981
      ],
      "ERC165Upgradeable": [
        2336
      ],
      "IERC165Upgradeable": [
        2348
      ],
      "Initializable": [
        636
      ]
    },
    "id": 2337,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2292,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:14"
      },
      {
        "absolutePath": "/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "file": "./IERC165Upgradeable.sol",
        "id": 2293,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2337,
        "sourceUnit": 2349,
        "src": "58:34:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 2294,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2337,
        "sourceUnit": 637,
        "src": "93:45:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2296,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 636,
              "src": "756:13:14"
            },
            "id": 2297,
            "nodeType": "InheritanceSpecifier",
            "src": "756:13:14"
          },
          {
            "baseName": {
              "id": 2298,
              "name": "IERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2348,
              "src": "771:18:14"
            },
            "id": 2299,
            "nodeType": "InheritanceSpecifier",
            "src": "771:18:14"
          }
        ],
        "contractDependencies": [
          636,
          2348
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2295,
          "nodeType": "StructuredDocumentation",
          "src": "140:576:14",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 2336,
        "linearizedBaseContracts": [
          2336,
          2348,
          636
        ],
        "name": "ERC165Upgradeable",
        "nameLocation": "735:17:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2307,
              "nodeType": "Block",
              "src": "842:42:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2304,
                      "name": "__ERC165_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
                      "src": "852:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "852:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2306,
                  "nodeType": "ExpressionStatement",
                  "src": "852:25:14"
                }
              ]
            },
            "id": 2308,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2301,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 635,
                  "src": "830:11:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "830:11:14"
              }
            ],
            "name": "__ERC165_init",
            "nameLocation": "805:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:2:14"
            },
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:0:14"
            },
            "scope": 2336,
            "src": "796:88:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2313,
              "nodeType": "Block",
              "src": "946:7:14",
              "statements": []
            },
            "id": 2314,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2310,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 635,
                  "src": "934:11:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "934:11:14"
              }
            ],
            "name": "__ERC165_init_unchained",
            "nameLocation": "899:23:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:2:14"
            },
            "returnParameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:14"
            },
            "scope": 2336,
            "src": "890:63:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2347
            ],
            "body": {
              "id": 2330,
              "nodeType": "Block",
              "src": "1110:75:14",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2323,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2317,
                      "src": "1127:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2325,
                            "name": "IERC165Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2348,
                            "src": "1147:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2348_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2348_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          ],
                          "id": 2324,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "1142:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1142:24:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$2348",
                          "typeString": "type(contract IERC165Upgradeable)"
                        }
                      },
                      "id": 2327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "1142:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1127:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2322,
                  "id": 2329,
                  "nodeType": "Return",
                  "src": "1120:58:14"
                }
              ]
            },
            "documentation": {
              "id": 2315,
              "nodeType": "StructuredDocumentation",
              "src": "958:56:14",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 2331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1028:17:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2319,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1086:8:14"
            },
            "parameters": {
              "id": 2318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2317,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1053:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2331,
                  "src": "1046:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:20:14"
            },
            "returnParameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2331,
                  "src": "1104:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:6:14"
            },
            "scope": 2336,
            "src": "1019:166:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2335,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1210:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 2336,
            "src": "1190:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2332,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1190:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2334,
              "length": {
                "hexValue": "3530",
                "id": 2333,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1198:2:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1190:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 2337,
        "src": "717:501:14"
      }
    ],
    "src": "33:1186:14"
  },
  "legacyAST": {
    "absolutePath": "/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1981
      ],
      "ERC165Upgradeable": [
        2336
      ],
      "IERC165Upgradeable": [
        2348
      ],
      "Initializable": [
        636
      ]
    },
    "id": 2337,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2292,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:14"
      },
      {
        "absolutePath": "/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "file": "./IERC165Upgradeable.sol",
        "id": 2293,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2337,
        "sourceUnit": 2349,
        "src": "58:34:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/paganinisilvio/Desktop/Workspace/LVR/contracts/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 2294,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2337,
        "sourceUnit": 637,
        "src": "93:45:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2296,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 636,
              "src": "756:13:14"
            },
            "id": 2297,
            "nodeType": "InheritanceSpecifier",
            "src": "756:13:14"
          },
          {
            "baseName": {
              "id": 2298,
              "name": "IERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2348,
              "src": "771:18:14"
            },
            "id": 2299,
            "nodeType": "InheritanceSpecifier",
            "src": "771:18:14"
          }
        ],
        "contractDependencies": [
          636,
          2348
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2295,
          "nodeType": "StructuredDocumentation",
          "src": "140:576:14",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 2336,
        "linearizedBaseContracts": [
          2336,
          2348,
          636
        ],
        "name": "ERC165Upgradeable",
        "nameLocation": "735:17:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2307,
              "nodeType": "Block",
              "src": "842:42:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2304,
                      "name": "__ERC165_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
                      "src": "852:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "852:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2306,
                  "nodeType": "ExpressionStatement",
                  "src": "852:25:14"
                }
              ]
            },
            "id": 2308,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2301,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 635,
                  "src": "830:11:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "830:11:14"
              }
            ],
            "name": "__ERC165_init",
            "nameLocation": "805:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:2:14"
            },
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:0:14"
            },
            "scope": 2336,
            "src": "796:88:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2313,
              "nodeType": "Block",
              "src": "946:7:14",
              "statements": []
            },
            "id": 2314,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2310,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 635,
                  "src": "934:11:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "934:11:14"
              }
            ],
            "name": "__ERC165_init_unchained",
            "nameLocation": "899:23:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:2:14"
            },
            "returnParameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:14"
            },
            "scope": 2336,
            "src": "890:63:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2347
            ],
            "body": {
              "id": 2330,
              "nodeType": "Block",
              "src": "1110:75:14",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2323,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2317,
                      "src": "1127:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2325,
                            "name": "IERC165Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2348,
                            "src": "1147:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2348_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$2348_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          ],
                          "id": 2324,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "1142:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1142:24:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$2348",
                          "typeString": "type(contract IERC165Upgradeable)"
                        }
                      },
                      "id": 2327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "1142:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1127:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2322,
                  "id": 2329,
                  "nodeType": "Return",
                  "src": "1120:58:14"
                }
              ]
            },
            "documentation": {
              "id": 2315,
              "nodeType": "StructuredDocumentation",
              "src": "958:56:14",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 2331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1028:17:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2319,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1086:8:14"
            },
            "parameters": {
              "id": 2318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2317,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1053:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2331,
                  "src": "1046:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:20:14"
            },
            "returnParameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2331,
                  "src": "1104:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:6:14"
            },
            "scope": 2336,
            "src": "1019:166:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2335,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1210:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 2336,
            "src": "1190:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2332,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1190:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2334,
              "length": {
                "hexValue": "3530",
                "id": 2333,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1198:2:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1190:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 2337,
        "src": "717:501:14"
      }
    ],
    "src": "33:1186:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-09T12:17:08.692Z",
  "devdoc": {
    "details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}